--- /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisTop/21.2.58/InstallArea/x86_64-slc6-gcc62-opt/src/PhysicsAnalysis/TopPhys/xAOD/TopCPTools/Root/TopEgammaCPTools.cxx	2018-12-14 03:07:38.000000000 +0100
+++ TopEgammaCPTools.cxx	2019-02-12 12:25:17.000000001 +0100
@@ -223,7 +223,7 @@
   const std::string trigger_string = "SINGLE_E_2015_e24_lhmedium_L1EM20VH_"
                                      "OR_e60_lhmedium_"
                                      "OR_e120_lhloose_"
-                                     "2016_2018_e26_lhtight_nod0_ivarloose_"
+                                     "2016_2017_e26_lhtight_nod0_ivarloose_"
                                      "OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0";
 
   // Define the data type variable - 0 : Data, 1 : MC FullSim, 3 : MC AFII
@@ -241,6 +241,11 @@
   // ID SFs
   m_electronEffSFID           = setupElectronSFToolWithMap(elSFPrefix + "ID", m_electronEffSFIDFile, "", electronID, "", "", dataType);
   m_electronEffSFIDLoose      = setupElectronSFToolWithMap(elSFPrefix + "IDLoose", m_electronEffSFIDLooseFile, "", electronIDLoose, "", "", dataType);
+  bool changeBack = false,  changeBackLoose = false;
+  if(electronIsolation == "PromptLepton"){electronIsolation = "None"; changeBack = true;}
+  if(electronIsolationLoose == "PromptLepton"){electronIsolationLoose = "None"; changeBackLoose = true;}
+  // if(electronIsolation == "FixedCutTightTrackOnly"){electronIsolation = "None"; changeBack = true;}
+  // if(electronIsolationLoose == "FixedCutTightTrackOnly"){electronIsolationLoose = "None"; changeBackLoose = true;}
   // Trigger SFs
   m_electronEffSFTrigger      = setupElectronSFToolWithMap(elSFPrefix + "TriggerSF", m_electronEffSFTriggerFile, "", electronID, electronIsolation, trigger_string, dataType);
   m_electronEffSFTriggerLoose = setupElectronSFToolWithMap(elSFPrefix + "TriggerSFLoose", m_electronEffSFTriggerLooseFile, "", electronIDLoose, electronIsolationLoose, trigger_string, dataType);
@@ -363,23 +368,24 @@
   return PathResolverFindCalibFile(file_path);
 }
 
-std::string EgammaCPTools::electronSFMapFilePath(const std::string& type) {
+  std::string EgammaCPTools::electronSFMapFilePath(const std::string& type, const std::string& isolation) {
     // Store here the paths to maps which may be updated with new recommendations
     // Currently can use maps for reco, id, iso, trigger but not ChargeID
-    const std::string el_calib_path = "ElectronEfficiencyCorrection/2015_2017/rel21.2/Consolidation_September2018_v1/";
+    //    const std::string el_calib_path = "ElectronEfficiencyCorrection/2015_2017/rel21.2/Consolidation_September2018_v1/";
+    const std::string el_calib_path = "ElectronEfficiencyCorrection/2015_2017/rel21.2/Moriond_February2018_v2/";
 
     std::string file_path;
     if(type == "reco") {
-      file_path = "map1.txt";
+      file_path = "map6.txt";
     }
     else if(type == "ID"){
-      file_path = "map1.txt";
+      file_path = "map6.txt";
     }
     else if(type == "isolation"){
-      file_path = "map1.txt";
+      file_path = "map6.txt";
     }
     else if(type == "trigger"){
-      file_path = "map1.txt";
+      file_path = "map6.txt";
     }
     else if(type == "ChargeID") {
       ATH_MSG_ERROR("Use electronSFFilePath method until ChargeID is supported by maps");
